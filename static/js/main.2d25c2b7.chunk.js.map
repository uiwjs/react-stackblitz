{"version":3,"sources":["logo.svg","../../src/index.tsx","Example.tsx","ExampleEmbed.tsx","App.tsx","../README.md","index.tsx"],"names":["props","embedOpts","template","settings","elementOrId","type","onClick","project","files","title","description","tags","dependencies","sdk","projectId","repoSlug","other","children","Example","clickToLoad","id","App","className","fixed","href","target","src","logo","alt","ExampleEmbed","style","paddingTop","maxWidth","margin","source","replace","ReactDOM","render","document","getElementById"],"mappings":"+MAAe,MAA0B,iC,8LCgDzC,EA3B+CA,YAC7C,MAA4JA,GAA5J,GAAM,EAAN,EAAM,WAAN,EAAM,UAAN,IAA6BC,iBAA7B,MAAM,GAAN,EAAM,EAAN,EAAM,WAAN,EAAM,QAAN,EAAM,QAAN,EAAM,YAAN,IAAkFC,gBAAlF,MAAM,mBAAN,EAAM,EAAN,EAAM,OAAN,EAAM,aAA+HC,EAArI,EAAqIA,SAArI,WACQC,EAAR,EAAQA,YAAR,WAoBA,OACE,4BAAQC,KAAK,UAAb,GAAiCC,QApBnC,YACE,IAAMC,EAAU,CAAEC,QAAOC,QAAOC,cAAaR,WAAUS,OAAMC,eAAcT,YACvEC,GAAJ,EACES,0BACSC,EACTD,uBACST,GAAJ,EACLS,8BACSE,EACTF,2BACST,EACTS,wBAEAA,6BAEEG,EAAJ,SACEA,cAIF,SAAwDhB,EAAMiB,aCEnDC,EAvBC,WACd,OACE,cAAC,EAAD,CACEhB,SAAS,mBACTO,MAAM,MACNC,YAAY,oBACZC,KAAM,CAAC,aAAc,MAAO,SAC5BC,aAAc,CACZ,MAAS,SACT,YAAa,SACb,oBAAqB,QACrB,iBAAkB,UAEpBJ,MAAO,CACL,aAAa,wBACb,WApCE,+lBAuBN,+CC8BWU,EA/BC,WAEd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CACEhB,SAAS,mBACTO,MAAM,MACNC,YAAY,2BACZC,KAAM,CAAC,aAAc,MAAO,SAC5BV,UAAW,CACTG,YAAa,QACbe,aAAa,GAEfP,aAAc,CACZ,MAAS,SACT,YAAa,SACb,oBAAqB,QACrB,iBAAkB,UAEpBJ,MAAO,CACL,aAAa,wBACb,WA1CA,+lBAyBJ,8BAsBA,qBAAKY,GAAG,cCpBCC,G,OArBO,WACpB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,CAAeC,OAAK,EAACC,KAAK,4CAA4CC,OAAO,YAC7E,yBAAQH,UAAU,aAAlB,UACE,qBAAKI,IAAKC,EAAML,UAAU,WAAWM,IAAI,SACzC,kDACA,gCACE,cAAC,EAAD,IACA,cAACC,EAAD,OAEF,sBAAMP,UAAU,iBAElB,cAAC,IAAD,CACEQ,MAAO,CAAEC,WAAY,GAAIC,SAAU,IAAKC,OAAQ,UAChDC,OCxBO,64GDwBOC,QAAQ,2BAA4B,WEpB1DC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2d25c2b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3931a054.svg\";","import React from 'react';\nimport sdk from \"@stackblitz/sdk\";\nimport { Project, EmbedOptions, OpenOptions } from \"@stackblitz/sdk/typings/interfaces\";\n\nexport type EmbedOpts = {\n  /** Either an element ID string or the target HTMLElement itself. */\n  elementOrId?: string | HTMLElement;\n} & EmbedOptions;\n\nexport type StackBlitzProps = Project & React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  /**\n   * String of the Github username, repo and optionally branch/tag/commit.\n   * https://developer.stackblitz.com/docs/platform/javascript-sdk#sdkopengithubprojectreposlug-opts\n   */\n  repoSlug?: string;\n  /** The ID of the StackBlitz project to open */\n  projectId?: string;\n  embedOpts?: EmbedOpts;\n  openOpts?: OpenOptions;\n};\n\nconst stackBlitz: React.FC<StackBlitzProps> = (props) => {\n  const { repoSlug, projectId, embedOpts = {}, openOpts, files, title, description, template = 'create-react-app', tags, dependencies, settings, ...other } = props || {};\n  const { elementOrId, ...otherEmbedOpts } = embedOpts;\n  function handleClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    const project = { files, title, description, template, tags, dependencies, settings };\n    if (elementOrId && projectId) {\n      sdk.embedProjectId(elementOrId, projectId, project as OpenOptions);\n    } else if (projectId) {\n      sdk.openProjectId(projectId, project as OpenOptions);\n    } else if (elementOrId && repoSlug) {\n      sdk.embedGithubProject(elementOrId, repoSlug, project as OpenOptions);\n    } else if (repoSlug) {\n      sdk.openGithubProject(repoSlug, project as OpenOptions);\n    } else if (elementOrId) {\n      sdk.embedProject(elementOrId, project, otherEmbedOpts);\n    } else {\n      sdk.openProject({ ...project }, openOpts);\n    }\n    if (other.onClick) {\n      other.onClick(event)\n    }\n  }\n  return (\n    <button type=\"button\" {...other} onClick={handleClick}>{props.children}</button>\n  );\n}\n\nexport default stackBlitz;\n","import StackBlitz from '../';\n\nconst code = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Avatar from '@uiw/react-avatar';\nimport \"@uiw/react-avatar/lib/esm/style/index.css\";\n\nReactDOM.render(\n  <div>\n    <div style={{ paddingBottom: 20 }}>\n      <Avatar icon=\"user\" />\n      <Avatar size=\"small\" icon=\"user\" />\n    </div>\n    <div>\n      <Avatar shape=\"square\" size=\"large\" icon=\"user\" />\n      <Avatar shape=\"square\" icon=\"user\" />\n      <Avatar shape=\"square\" size=\"small\" icon=\"user\" />\n      <Avatar shape=\"square\" size=\"mini\" icon=\"user\" />\n    </div>\n  </div>,\n  document.getElementById(\"root\")\n);`;\n\nconst Example = () => {\n  return (\n    <StackBlitz\n      template=\"create-react-app\"\n      title=\"uiw\"\n      description=\"uiw v4.7.2 - demo\"\n      tags={[\"stackblitz\", \"uiw\", \"react\"]}\n      dependencies={{\n        \"react\": \"17.0.1\",\n        \"react-dom\": \"17.0.1\",\n        \"@uiw/react-avatar\": \"4.7.2\",\n        \"@babel/runtime\": \"7.12.5\",\n      }}\n      files={{\n        \"index.html\": `<div id=\"root\"></div>`,\n        \"index.js\": code,\n      }}\n    >\n      Basic Example Open in StackBlitz\n    </StackBlitz>\n  )\n}\n\nexport default Example;","import { Fragment } from 'react';\nimport StackBlitz from '../';\n\nconst code = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Avatar from '@uiw/react-avatar';\nimport \"@uiw/react-avatar/lib/esm/style/index.css\";\n\nReactDOM.render(\n  <div>\n    <div style={{ paddingBottom: 20 }}>\n      <Avatar icon=\"user\" />\n      <Avatar size=\"small\" icon=\"user\" />\n    </div>\n    <div>\n      <Avatar shape=\"square\" size=\"large\" icon=\"user\" />\n      <Avatar shape=\"square\" icon=\"user\" />\n      <Avatar shape=\"square\" size=\"small\" icon=\"user\" />\n      <Avatar shape=\"square\" size=\"mini\" icon=\"user\" />\n    </div>\n  </div>,\n  document.getElementById(\"root\")\n);`;\n\nconst Example = () => {\n\n  return (\n    <Fragment>\n      <StackBlitz\n        template=\"create-react-app\"\n        title=\"uiw\"\n        description=\"uiw avatar v4.7.2 - demo\"\n        tags={[\"stackblitz\", \"uiw\", \"react\"]}\n        embedOpts={{\n          elementOrId: 'myDiv',\n          clickToLoad: true,\n        }}\n        dependencies={{\n          \"react\": \"17.0.1\",\n          \"react-dom\": \"17.0.1\",\n          \"@uiw/react-avatar\": \"4.7.2\",\n          \"@babel/runtime\": \"7.12.5\",\n        }}\n        files={{\n          \"index.html\": `<div id=\"root\"></div>`,\n          \"index.js\": code,\n        }}\n      >\n        Embed StackBlitz\n      </StackBlitz>\n      <div id=\"myDiv\"></div>\n    </Fragment>\n  )\n}\n\nexport default Example;","import React from 'react';\nimport Markdown from '@uiw/react-markdown-preview';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport logo from './logo.svg';\nimport MDStr from '../README.md';\nimport Example from './Example';\nimport ExampleEmbed from './ExampleEmbed';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <GitHubCorners fixed href=\"https://github.com/uiwjs/react-stackblitz\" target=\"__blank\" />\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>React StackBlitz</h2>\n        <div>\n          <Example />\n          <ExampleEmbed />\n        </div>\n        <span className=\"App-arrow\"></span>\n      </header>\n      <Markdown\n        style={{ paddingTop: 25, maxWidth: 680, margin: '0 auto' }}\n        source={MDStr.replace(/([\\s\\S]*)<!--dividing-->/, '')}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","export default \"React StackBlitz\\n===\\n\\n<!--dividing-->\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-stackblitz/workflows/Build%20&%20Deploy/badge.svg)](https://github.com/uiwjs/react-stackblitz/actions)\\n[![Issues](https://img.shields.io/github/issues/uiwjs/react-stackblitz.svg)](https://github.com/uiwjs/react-stackblitz/issues)\\n[![Forks](https://img.shields.io/github/forks/uiwjs/react-stackblitz.svg)](https://github.com/uiwjs/react-stackblitz/network)\\n[![Stars](https://img.shields.io/github/stars/uiwjs/react-stackblitz.svg)](https://github.com/uiwjs/react-stackblitz/stargazers)\\n[![Release](https://img.shields.io/github/release/uiwjs/react-stackblitz)](https://github.com/uiwjs/react-stackblitz/releases)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-stackblitz.svg)](https://www.npmjs.com/package/@uiw/react-stackblitz)\\n\\nA React component is provided that allows you to programmatically generate [stackblitz](https://stackblitz.com/) projects from code samples on the fly.\\n\\n## Install\\n\\n```bash\\nnpm install @uiw/react-stackblitz --save\\n```\\n\\n## Usage\\n\\n```jsx\\nimport React from 'react';\\nimport StackBlitz from '@uiw/react-stackblitz';\\n\\nconst code = `import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport Avatar from '@uiw/react-avatar';\\nimport \\\"@uiw/react-avatar/lib/esm/style/index.css\\\";\\n\\nReactDOM.render(\\n  <div>\\n    <div style={{ paddingBottom: 20 }}>\\n      <Avatar icon=\\\"user\\\" />\\n      <Avatar size=\\\"small\\\" icon=\\\"user\\\" />\\n    </div>\\n    <div>\\n      <Avatar shape=\\\"square\\\" size=\\\"large\\\" icon=\\\"user\\\" />\\n      <Avatar shape=\\\"square\\\" icon=\\\"user\\\" />\\n      <Avatar shape=\\\"square\\\" size=\\\"small\\\" icon=\\\"user\\\" />\\n      <Avatar shape=\\\"square\\\" size=\\\"mini\\\" icon=\\\"user\\\" />\\n    </div>\\n  </div>,\\n  document.getElementById(\\\"root\\\")\\n);`;\\n\\nconst Example = () => {\\n  return (\\n    <StackBlitz\\n      template=\\\"create-react-app\\\"\\n      title=\\\"uiw\\\"\\n      description=\\\"uiw v4.7.2 - demo\\\"\\n      tags={[\\\"stackblitz\\\", \\\"uiw\\\", \\\"react\\\"]}\\n      dependencies={{\\n        \\\"react\\\": \\\"17.0.1\\\",\\n        \\\"react-dom\\\": \\\"17.0.1\\\",\\n        \\\"@uiw/react-avatar\\\": \\\"4.7.2\\\",\\n        \\\"@babel/runtime\\\": \\\"7.12.5\\\",\\n      }}\\n      files={{\\n        \\\"index.html\\\": `<div id=\\\"root\\\"></div>`,\\n        \\\"index.js\\\": code,\\n      }}\\n    >\\n      Basic Example Open in StackBlitz\\n    </StackBlitz>\\n  )\\n}\\n```\\n\\n## Props\\n\\n```typescript\\ntype StackBlitzProps = Project & React.ButtonHTMLAttributes<HTMLButtonElement> & {\\n  /**\\n   * String of the Github username, repo and optionally branch/tag/commit.\\n   * https://developer.stackblitz.com/docs/platform/javascript-sdk#sdkopengithubprojectreposlug-opts\\n   */\\n  repoSlug?: string;\\n  projectId?: string;\\n  embedOpts?: EmbedOpts;\\n  openOpts?: OpenOptions;\\n};\\n```\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**production**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\\n\\n### Related\\n\\n- [`@uiw/react-codepen`](https://github.com/uiwjs/react-codepen)\\n- [`@uiw/react-codesandbox`](https://github.com/uiwjs/react-codesandbox)\\n\\n### License\\n\\nLicensed under the MIT License.\\n\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}